name: run

on:
  workflow_dispatch:
    inputs:
      branches:
        description: 'Branches to merge (separated by space)'
        required: false
        type: string
        default: ""
      rm_old_branch:
        description: 'Will remove old merged tmp branch, if empty dont remove it'
        required: false
        type: string
        default: ''
      environment:
        description: 'Environment (e.g., dev, staging, prod)'
        required: true
        type: string
        default: dev


jobs:
  first-run:
    runs-on: ubuntu-latest
    steps:
      - name: Print branches
        run: |
          echo "branches=${{ github.event.inputs.branches }}"

  multiple_branches:
    uses: ./.github/workflows/cache-branch.yml
    permissions:
      contents: write
    with:
      branches: ${{ github.event.inputs.branches  }}
      rm_old_branch: ${{ github.event.inputs.rm_old_branch }}"
  merge_branches:
    needs: multiple_branches
    uses: ./.github/workflows/merge-branch.yml
    permissions:
      contents: write
    with:
      branches: ${{ github.event.inputs.branches  }}


  build-run:
    needs: merge_branches
    env:
      BRANCH_JSON: './multiple_branch.json'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Git checkout multiple-branch-info
        run: |
          git checkout -b multiple-branch-info origin/multiple-branch-info
          branch=$(jq -r '.current_branch' ${{ env.BRANCH_JSON }})
          echo "TMP_BRANCH=$branch" >> $GITHUB_ENV
          echo "TMP_BRANCH=$branch"
          echo "The target branch is ${GITHUB_REF#refs/heads/}"
          git checkout ${GITHUB_REF#refs/heads/}

      - name: Read branch
        run: |
          git branch
          echo "The source branch is ${{ github.head_ref }}"
          echo "The target branch is ${{ github.base_ref }}"
          echo "The target branch is ${{ github.ref }}"
          echo "The target branch is ${GITHUB_REF#refs/heads/}"

      - name: Check Out Target Branch
        run: |
          if [ "${{ env.TMP_BRANCH }}" == '' ]; then
            git_hash=$(git rev-parse --short HEAD)
            echo "GIT_SHORT_SHA=$git_hash" >> $GITHUB_ENV
            echo "GIT_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
            echo "one branch ${GITHUB_REF#refs/heads/}"
          else
            git_hash=$(git rev-parse --short origin/${{ env.TMP_BRANCH }})
            echo "GIT_SHORT_SHA=$git_hash" >> $GITHUB_ENV
            echo "GIT_BRANCH=${{ env.TMP_BRANCH }}" >> $GITHUB_ENV
            echo "multiple branch ${{ env.TMP_BRANCH }}"
          fi